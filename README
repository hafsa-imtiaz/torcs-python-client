# README - Python Client for Simulated Car Racing Championship 2012

## Overview

This project is a Python client designed to interact with the Simulated Car Racing Championship (SCR) 2012. The client collects telemetry data from the racing simulation game and processes various parameters that affect the car's performance on the track. This project is part of the **Artificial Intelligence (AI-2002)** course, Spring 2025 semester.

### Python Code Link:
[Simulated Car Racing Championship 2012](http://games.ws.dei.polimi.it/competitions/scr/)

## Deliverables

### Deliverable #1: Collecting Telemetry Data

This deliverable aims to collect and understand the telemetry data generated during the simulated car racing session. Telemetry data is vital for analyzing the performance of the car, understanding driving dynamics, and refining the AI's decision-making process.

### Telemetry Data Overview

Telemetry data in racing games typically consists of the following parameters:

#### 1. **Car Status:**
   - **Speed**: The current speed of the car.
   - **Acceleration**: The rate at which the car's speed is changing.
   - **Fuel Levels**: The current fuel level in the car's tank.
   - **Gear**: The current gear in use by the car.

#### 2. **Position Data:**
   - **Track Coordinates**: The car’s position on the track (e.g., X, Y coordinates).
   - **Lap Number**: The current lap the car is completing.
   - **Track Section**: The specific section of the track where the car is located.

#### 3. **Environmental Data:**
   - **Weather Conditions**: Information on the current weather (e.g., rain, sun, temperature).
   - **Track Condition**: Whether the track is wet, dry, or affected by other external conditions.

#### 4. **Sensor Data:**
   - **Speed Sensors**: Sensors that track the car’s current speed.
   - **GPS/Positioning Sensors**: Used to track the car's location on the track.
   - **Gyroscopes/Accelerometers**: Measure changes in the car’s orientation, lateral acceleration, and motion.
   - **Lidar/Proximity Sensors**: Detect obstacles or other cars around the vehicle.
   - **Camera Feed Data**: (Out of scope for this task) Could include vision-based analysis such as detecting obstacles and other cars.

### Project Goals

- **Data Collection**: Collect telemetry data from the Simulated Car Racing Championship environment.
- **Data Analysis**: Understand and process the data for further analysis, such as car dynamics, track performance, and AI-based decision-making.
  
### Requirements

1. **Python 3.x** or higher
2. Libraries:
   - `numpy`: For data manipulation and analysis.
   - `matplotlib`: For data visualization.
   - `requests` or relevant libraries for communication with the SCR server (if applicable).

### Installation

1. Clone the repository:
   ```bash
   git clone <repository_url>
   ```
2. Install required dependencies:
   ```bash
   pip install -r requirements.txt
   ```

### Usage

To run the Python client for telemetry data collection, use the following command:

```bash
python collect_telemetry.py
```

Ensure the game server or simulator is running and accessible for the client to collect real-time telemetry data.

### License

This project is part of the **Artificial Intelligence AI-2002 Spring-2025** course and is intended for academic purposes only.

---

This README provides an overview of the Python client for telemetry data collection, the structure of the data, and how to set up and run the client. Feel free to modify the repository as necessary for further development or specific course requirements.